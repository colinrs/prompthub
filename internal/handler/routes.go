// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	category "github.com/colinrs/prompthub/internal/handler/category"
	prompt "github.com/colinrs/prompthub/internal/handler/prompt"
	user "github.com/colinrs/prompthub/internal/handler/user"
	"github.com/colinrs/prompthub/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/category/create",
				Handler: category.CreateCategoryHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/prompt/create",
				Handler: prompt.CreatePromptHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/prompt/delete",
				Handler: prompt.DeletePromptHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/prompt/update",
				Handler: prompt.UpdatePromptHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPut,
				Path:    "/user/change_password",
				Handler: user.ChangePasswordHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/create",
				Handler: user.CreateUserHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: user.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user/logout",
				Handler: user.LogoutHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user/refresh_token",
				Handler: user.RefreshTokenHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/user/update",
				Handler: user.UpdateUserHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)
}
