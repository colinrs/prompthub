syntax = "v1"

@server (
	group:      prompt
	prefix:     /api/v1/prompt
	middleware: UserLoginMiddleware
)
service prompthub-api {
	@handler createPrompt
	post /create (CreatePromptRequest)

	@handler updatePrompt
	put /update (UpdatePromptRequest)

	@handler deletePrompt
	delete /delete (DeletePromptRequest)

	@handler likePrompt
	post /like (LikePromptRequest) returns (LikePromptResponse)

	@handler savePrompt
	post /save (SavePromptRequest) returns (SavePromptResponse)
}

@server (
	group:      prompt
	prefix:     /api/v1/prompt
	middleware: UserLoginMiddleware
)
service prompthub-api {
	@handler getPrompt
	get /get (GetPromptRequest) returns (Prompt)

	@handler listPrompts
	get /list (ListPromptsRequest) returns (ListPromptResponse)

	@handler searchPrompts
	get /search (SearchPromptsRequest) returns (SearchPromptsResponse)
}

type CreatePromptRequest {
	CategoryId uint   `json:"categoryId" validate:"min=1"`
	Title      string `json:"title" validate:"max=50"`
	Content    string `json:"content" validate:"max=10240"`
}

type UpdatePromptRequest {
	ID         uint   `json:"id" validate:"omitempty,min=1"`
	CategoryId uint   `json:"categoryId" validate:"min=1"`
	Title      string `json:"title" validate:"max=50"`
	Content    string `json:"content" validate:"max=10240"`
}

type DeletePromptRequest {
	PromptID uint `form:"promptId" validate:"omitempty,min=1"`
}

type GetPromptRequest {
	PromptID uint `form:"promptId" validate:"omitempty,min=1"`
}

type ListPromptsRequest {
	Page     int `form:"page,optional,default=1"`
	PageSize int `form:"pageSize,optional,default=10"`
}

type ListPromptResponse {
	List     []Prompt `json:"list"`
	Page     int      `json:"page"`
	PageSize int      `json:"pageSize"`
	Total    int      `json:"total"`
}

type Prompt {
	Id            uint      `json:"id"`
	Title         string    `json:"title"`
	Content       string    `json:"content"`
	CategoryID    uint      `json:"categoryId"`
	CategoryColor string    `json:"categoryColor"`
	Category      string    `json:"category"`
	CreatedAt     string    `json:"createdAt"`
	UpdatedAt     string    `json:"updatedAt"`
	CreatedBy     CreatedBy `json:"createdBy"`
	Likes         int       `json:"likes"`
	Liked         bool      `json:"liked"`
	Saved         bool      `json:"saved"`
}

type CreatedBy {
	UserID   uint   `json:"userId"`
	UserName string `json:"userName"`
	Avatar   string `json:"avatar"`
}

type SearchPromptsRequest {
	Title      string `form:"title,optional"`
	Content    string `form:"content,optional"`
	CategoryID uint   `form:"categoryId,optional"`
	Sort       string `form:"sort,optional"` // popular,newest
	Page       int    `form:"page,optional,default=1"`
	PageSize   int    `form:"pageSize,optional,default=10"`
}

type SearchPromptsResponse {
	List     []Prompt `json:"list"`
	Page     int      `json:"page"`
	PageSize int      `json:"pageSize"`
	Total    int      `json:"total"`
}

type LikePromptRequest {
	PromptID uint   `json:"promptId" validate:"omitempty,min=1"`
	Action   string `json:"action"` // like or unlike
}

type LikePromptResponse {}

type SavePromptRequest {
	PromptID uint   `json:"promptId" validate:"omitempty,min=1"`
	Action   string `json:"action"` // save or unsave
}

type SavePromptResponse {}

